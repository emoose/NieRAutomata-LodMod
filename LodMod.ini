; LodMod.ini should either be stored next to NieRAutomata.exe, or next to LodMod.dll, or inside one of the following folders:
; Steam: Documents\My Games\NieR_Automata\
; UWP: Documents\My Games\NieR_Automata_PC\

; tweaks marked "experimental" haven't been tested that much yet, and could have more effects than those listed.
; if you find anything strange happening with any of these please let me know!

[LodMod]
; whether to write LodMod startup info to LodMod.log
; (will be written out to same folder as the LodMod.ini that was read in)
; useful if you need to check if LodMod is actually loading in/reading your settings properly
; this'll also warn you if a setting wasn't actually applied by the game for some reason
DebugLog = false

; allows increasing LOD distances or disabling them entirely
; can help with AO-bleed without the full perf hit of LODs being disabled
; you can disable LODs by setting this to 0, or set to 1 to leave LODs vanilla
; for getting rid of AO bleed, a value of 10 or above is recommended (or 0)
; (minimum: 0 (LODs disabled), maximum: ???, game default: 1)
LODMultiplier = 0

; AO resolution in vanilla game is set to 1/4 your screen res
; changing the multipliers below lets you increase the resolution, note that this can be quite heavy though
; eg with both set to multiplier 2 this can have ~10FPS difference in worst case...
; (only setting one of the values to 2 might work well, will make the game use 1/2 screen res instead of 1/4)
; (minimum: 0.1, maximum: 2, game default: 1, 1.5 might be a good value for some people)
AOMultiplierWidth = 1
AOMultiplierHeight = 1

; sharpness of shadows is determined by both resolution & distance
; the larger the distance, the more of the map has to be fit into the given resolution, decreasing the quality of shadows
; defaults of 8192 resolution/70 distance should match vanilla's quality, while increasing the distance greatly
; if you'd like shadow quality increased just decrease the distance, or increase the resolution
; resolution must be power of 2: 2048, 4096, 8192, 16384, 32768(?)
; (minimum: 2048, maximum: GPU-dependant, game default: 2048)
; (note that some injection methods may leave this resolution change only half-enabled, in that case LodMod will disable it and revert the changes)
; (if you don't notice any change when using it try enabling DebugLog above & check your LodMod.log file!)
ShadowResolution = 8192

ShadowDistanceMinimum = 70 ; set to 0 to disable
ShadowDistanceMaximum = 0 ; only worth setting if default game distances give you perf issues

; allows multiplying the per-scene shadow distance, disable Minimum/Maximum above for this to work properly
; (alternatively you can use Minimum/Maximum above to restrict what this multiplier sets it to)
; (game default: 1)
ShadowDistanceMultiplier = 1 

; disables manual-culling triggers, helping to prevent models/geometry from disappearing at certain distances
; seems these triggers were mostly placed to cull off-screen objects, likely to help with performance
; many times the objects being culled aren't actually off-screen though, resulting in things randomly disappearing/reappearing depending on camera position, which this fix can help prevent
; (some examples of objects fixed with this: mall interior no longer disappears after crossing bridge, building outside camp will stay on-screen after walking near camp, probably many more examples too!)
; there is a chance of this causing ugly LOD models to appear where they shouldn't (which the manual culling would have removed), but those should be very rare now after help from Steam forums members to filter them all out
; if you find any still remaining please report them to me at https://github.com/emoose/NieRAutomata-LodMod!
DisableManualCulling = true

; experimental: allows you to adjust the strength of the filter applied to shadows, filter seems to just blur it to reduce aliasing
; adjusting this could help increase sharpness of shadows without needing to reduce distance/increase resolution too much
; or help soften up shadows if you feel you've made them too sharp
; different game areas seem to use different filter strengths, eg. forest uses a high value which makes shadows softer
; there's two options for adjusting this: either set ShadowFilterStrengthMinimum/Maximum to force the whole game to certain strengths
; or you can use ShadowFilterBias instead which can adjust the strength in a certain direction when an area is loaded instead
; (alternatively you can combine Bias with Minimum/Maximum to restrict the values Bias sets it to)
; (games default filter strength is usually 4, but can change per-scene)
ShadowFilterStrengthBias = 0 ; set to 0 to disable, -1 might be a good value

ShadowFilterStrengthMinimum = 0 ; set to 0 to disable
ShadowFilterStrengthMaximum = 0 ; set to 0 to disable

; experimental: patches game to use the real-time HQ model, instead of a static LQ model
; (so eg. tree shadows will now sway along with the tree, instead of showing a static shadow)
; not tested much yet, seems to work fine around city ruins at least, but could possibly cause issues if any area depends on the LQ models
; (since this has to also force LQ models not to render, otherwise both HQ & LQ would render at the same time...)
; (default: false)
ShadowModelHQ = false

; experimental: forces all models to allow shadows to be casted from them
; helps with small objects like rocks/grass, seems to make most of them cast shadows but not all, need to look into it some more
; note: could possibly make things that shouldn't cast shadows (eg. invisible models) start casting shadows too
; haven't noticed any bad effects from it yet, but it's possible
; (default: false)
ShadowModelForceAll = false

; experimental: lets you tweak the resolution of the communication screens projected from your pod
; (the 3d-renders that appear when receiving comms from another character)
; game seems to render at this resolution and then do a simple rescale
; there isn't really much visual difference from changing this, but it's here if you want 
; resolution must be power of 2: 256, 512, 1024, 2048, 4096, 8192, 16384, 32768(?)
; (minimum: 1, maximum: GPU-dependant, game default: 256)
CommunicationScreenResolution = 256

; _very_ experimental: how many high-quality map slots/cells are loaded around the player
; increasing this can increase the distance that the HQ version of maps are visible for
; the game default is 7 slots, for a distance of 1 cell away in every direction
; doubling this distance to 2 cells requires 19 slots
; unfortunately using 19 slots will quickly make the game reach the model limit & start spawning invisible objects, but 17 should be safe
; this will likely have a performance hit, maybe increase loading stutters, and likely cause strange issues with lighting/NPC spawns/who knows what else
; not recommended for general play, maybe good for screen captures though
; (win10 only atm)
; (minimum: 7, maximum: 19, game default: 7)
HQMapSlots = 7

[Buffers]
; whether to extend buffers in april 2017 build to match with 2021 builds
; allows 2017 build to load in the updated 2021 files without much issue
; 2017 debug doesn't seem to require this
; (data/shader.dat & data/ui/ need to be taken from 2017 CPKs for this to work well though)
; (game default: false)
ExtendTo2021 = true

; how much to multiply the buffers used by movies, -1 will let LodMod analyze your movies to find the right size
; only need to change this if your movies are larger than 1080p & the game won't run them properly for some reason
; to calculate this 'properly', multiply your movies height & width
; (eg. 2560 x 1440 = 3686400)
; now divide that by 2073600 (1920 x 1080)
; the answer is how much larger the buffer should be (round up to nearest whole number)
; (movie mods can create a data\movie\LodMod.ini file and change MovieMultiplier there - see LodMod_MovieSample.ini on github for an example - this will be loaded in after the main LodMod.ini)
; (game default: 1, LodMod default: -1, lets LodMod decide)
MovieMultiplier = -1

[Movies]
; allows games movie player to work with H264 codec, set to 1 to enable
; -1 will let LodMod analyze your movies to only enable it if required
; recommend only enabling this if you actually have H264 movies to play
; (like MovieMultiplier, mod authors can change this inside data\movie\LodMod.ini file)
; (game default: 0, LodMod default: -1, lets LodMod decide)
EnableH264 = -1

; 64-bit encryption key to use for the movie (video & audio)
; default automata movies don't use encryption, but some tools require it
; (movies from other games might also need to use a key too)
; (game default: 0)
EncryptionKey = 0x0

[Misc]
; allows skipping the beginning logo movies, loading straight into the "Booting" screen
SkipIntroMovies = false

; if set will skip over the Booting screens shown by the game, making it much quicker to load in.
; there is a consequence of the screen being skipped however: the game will now show a black screen until the actual loading has completed instead
; (that loading process is usually much faster than the "Booting" screen animation though, so shouldn't be a huge deal for most people)
SkipBootingScreens = false

; FixJapaneseEncoding / TranslateEnable work on pieces of hardcoded JP text inside the game
; in the retail release these are mostly just error messages (eg. the "weird corrupted messagebox" that can show up when too many mods are installed)
; however the debug build has a huge amount of JP text inside, TranslateEnable will try translating as much as it can, though it's still incomplete right now
; FixJapaneseEncoding just converts the JP text's Shift-JIS encoding over to UTF8, so non-JP users can view JP messages without corruption
FixJapaneseEncoding = true
TranslateEnable = true

[Wrapper]
; uncomment the LoadLibrary line below & set it to a DLL filename for LodMod to "chainload" that DLL
; the library being chainloaded should wrap the same library that LodMod is wrapping
; eg. if LodMod is wrapping xinput1_4.dll, the module you chainload below should also provide all the XInput1_4 exports
; (SpecialK seems to require its filename to match the original DLL being wrapped, placing SK into a seperate folder and giving the full path here should work fine)
; if the DLL is already inside the game folder & is named appropriately (dinput8/xinput1_3/1_4/dxgi...) the game itself will likely load it in, and there's no need for LM to load it
; LoadLibrary = C:\SpecialK\dinput8.dll

[ShadowCascadeAlgorithm]
; this section allows you to define an algorithm for setting up the 4 shadow cascade distances
; you can tweak the distances however you like - this entire section is evaluated as a single math expression
; you can also make use of temporary variables etc, and some functions like sin/cos/tan/floor/etc are also provided
; for a list of functions (and info about other features like arrays) see the DeskCalc readme: https://github.com/Raincode/DeskCalc

; 9 variables are reserved for use in your algorithm:
; - (input) distance0: the cascade0 distance calculated via the ShadowDistanceMinimum / ShadowDistanceMaximum / ShadowDistanceMultiplier settings above
; - (input) original0, original1, original2, original3: original cascade distances defined by the games level data
; - (in/out) cascade0, cascade1, cascade2, cascade3: new cascade distances used to replace the original ones

; cascade0 is the cascade closest to the player
; this is usually treated as the "base" distance for the other cascades to be calculated from
;cascade0 = distance0

; update cascades based on the original ratio of them against cascade0
; (eg. if cascade1 was double cascade0, this will update it so cascade1 is double the new cascade0)
; this is the default LodMod algo (if ShadowCascadeSection is empty/all commented out, this algo will be used, albeit a faster version built into LodMod DLL)
;cascade1 = cascade0 * (original1 / original0)
;cascade2 = cascade0 * (original2 / original0)
;cascade3 = cascade0 * (original3 / original0)

; update cascades based on the original ratio of them against the previous cascade
; (using the previous cascade instead of always cascade0 makes this slightly different than the above - not sure if it's better or worse though)
;cascade1 = cascade0 * (original1 / original0)
;cascade2 = cascade1 * (original2 / original1)
;cascade3 = cascade2 * (original3 / original2)

; update cascades to just increase them based on the delta/difference of cascade0 against original0
;cascade1 = cascade1 + (cascade0 - original0)
;cascade2 = cascade2 + (cascade0 - original0)
;cascade3 = cascade3 + (cascade0 - original0)

; PSS - "Practical Split Scheme"
; this results in cascade distances that are near perfect - can hardly see any kind of seam-line between them
; however this also sets cascade0 so high that up-close shadows are pretty much a blur
; maybe if there was some way to only affect cascade1-3 it could be worthwhile
; or if another shadow method could be used on top of the CSM for up close shadows...
; TODO: add PSS here...

[SoftFilteredModels]
; the model filters below will filter out models based on area id & model name
; soft-filtering is for DisableManualCulling, will pass the model over to the games original ManualCulling function for that to decide if it should be shown or not
; (basically letting the game decide based on its own filters, as if DisableManualCulling wasn't activated for that model)
; hard-filtering will always force the model to be culled, even when you have DisableManualCulling set to false

; forest/shopping center LODs near desert entrance
mall = 0x1316
cliff = 0x1316
maintree = 0x1316

; factory LODs showing near desert start
mtrobot5 = 0x0921
mtrobot9 = 0x1021
mtrobot9_1 = 0x1021
nolowmap_objects08 = 0x0821
nolowmap_MtrRobot4 = 0x0920
nolowmap_tanks = 0x0920
nolowmap_robotroom = 0x0920
nolowmap_container = 0x0920
nolowmap_MtRobot2 = 0x0820

; misplaced LOD ground near desert housing
g11015_ground = 0x1115

; LOD near forest waterfalls
buildddddddddddd = 0x1214

; misplaced LOD ground intersecting desert oasis ground
g10218_ground = 0x0318

; mountain LODs from amusement park showing near forest castle
; (sadly there's a wall that pops in/out near forest castle which ruins the view of amusement park... hope it can be fixed eventually, with the wall there it looks great)
g11616_enkei_mountain = 0x1616
g11816_mountain = 0x1816

; strange floating LOD outside forest castle save point
g11713_outsidewall = 0x1713

; strange texture when jumping inside underground ship
nolowmap_bg0410_sea = 0x1520

; desert: camp buildings showing near mall entrance
sukima02 = 0x1018
rock_01 = 0x1018
rock_02 = 0x1018
rock_03 = 0x1018
rock_04 = 0x1018
bg3012_01_b_a = 0x1018
g11018_ground = 0x1018
g11117_rock01 = 0x1117
g11117_rock02 = 0x1117
g11117_rock03 = 0x1117
g11117_rock04 = 0x1117
g11117_ground = 0x1117
ground_g11118jimen = 0x1118
g11118_build00 = 0x1118
g11118_build01 = 0x1118
g11118_build02 = 0x1118
g11118_build03 = 0x1118
g11118_build05 = 0x1118
g11118_build06 = 0x1118
g11118_build07 = 0x1118

; Strange building pieces appearing during The Tower
; Area1 seems to be responsible, but we'll soft-filter Area2/Area3 too since they're guilty by association
; (actual area ID is 0x50001 for these)
Area1 = 0x0001
Area2 = 0x0001
Area3 = 0x0001

[HardFilteredModels]
; hard-filtered models
; format:
;  0x<model_area_id>_<model_name> = <player_area_id>
; will always prevent the model from appearing when player is inside player_area_id

; inner factory showing at desert start
; (these are soft filtered above, but sometimes games ManualCull func seems to let them through in certain places.. lets ban them permanently)
0x0821_nolowmap_objects08 = 0x0913
0x0821_nolowmap_objects08 = 0x0a12
0x0920_nolowmap_MtrRobot4 = 0x0912
0x0920_nolowmap_MtrRobot4 = 0x0a12
0x0920_nolowmap_tanks = 0x0912
0x0920_nolowmap_tanks = 0x0a12
0x0920_nolowmap_robotroom = 0x0912
0x0920_nolowmap_robotroom = 0x0a12
0x0920_nolowmap_container = 0x0912
0x0920_nolowmap_container = 0x0a12
0x0820_nolowmap_MtRobot2 = 0x0912
0x0820_nolowmap_MtRobot2 = 0x0a12

; desert camp building showing inside desert (ugly pop-in/pop-out)
0x1118_nolowmap_enkei = 0x0912

; strange texture when jumping inside underground ship
0x1520_nolowmap_bg0410_sea = 0x0F12

; filters for ShadowModelForceAll, will disable shadows on models specified here:
[ShadowForceAllFilters]
; shadow covering city ruins in route C, "enkei" maybe means "background", hopefully the only model that's like this
ENKEI = 0xFFFF

; strange shadowing on road near desert camp, model has broken vertex or something, too bad...
GROUND_g11118jimen = 0x1118
